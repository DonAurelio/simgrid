/*! @page uhood_tech Coding Standard and Technical Considerations

This page describes the software infrastructure behind the SimGrid
project. This is not the components' organisation (described in @ref
uhood_arch) but information on how to extend the framework, how the
automatic tests are run, and so on. These information are split on
several pages, as follows:

 - @ref uhood_tech_inside
 - @subpage inside_doxygen
 - @subpage inside_extending
 - @subpage inside_release

@section uhood_tech_inside Insiders Considerations


@subsection uhood_tech_tricks Random Tricks

Over the years, we accumulated a few tricks that make it easier to
work with SimGrid. Here is a somewhat unsorted list of such tricks.

### Easy out of tree builds

It is easy to break one build configuration or another. That's
perfectly OK and we will not point fingers if it happens. But it is
somewhat forbidden to leave the tree broken for more than one working
day. Monitor the build daemons after you push something, and strive to
fix any breakage ASAP.

To easily switch between the configs without rebuilding everything,
create a set of out of tree builds (as explained in @ref
install_cmake_outsrc) in addition to your main build tree.
To not mess with git, you want to put your build tree under the build/
directory, which is ignored by git. For example, I have the following
directories: build/clang build/full build/mc (but YMMV).

Then, the problem is that when you traverse these directories, you
cannot edit the sources (that are in the srcdir, while you're in
bindir). This makes it difficult to launch the tests and everything.

To solve that issue, just call `make hardlinks` from your build dir.
This will create hard links allowing to share every source files into
the build dir. They are not copied, but hard linked. It means that
each file is accessible under several names, from the srcdir and from
the bindirs. If you edit a source file found under bindir, the srcdir
version (visible to git) will also be changed (that's the same file,
after all).

Note that the links sometimes broken by git or others. Relaunching
`make hardlinks` may help if you're getting incoherent build results.

*/
